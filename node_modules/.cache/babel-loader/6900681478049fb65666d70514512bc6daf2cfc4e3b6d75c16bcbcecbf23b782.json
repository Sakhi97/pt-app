{"ast":null,"code":"var _jsxFileName = \"/Users/sakhiahmad/Desktop/Uni/Front-end/pt-app/ptapp/pt-app-deploy/src/components/Statistics.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BarChart, CartesianGrid, XAxis, YAxis, Tooltip, Legend, Bar, PieChart, Pie, Cell } from 'recharts';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Statistics = () => {\n  _s();\n  const GET_ALL_URL = 'https://traineeapp.azurewebsites.net/gettrainings';\n  const [trainings, setTrainings] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(GET_ALL_URL);\n        if (!response.ok) {\n          throw new Error(`Error fetching trainings: ${response.status}`);\n        }\n        const data = await response.json();\n        setTrainings(data);\n      } catch (error) {\n        console.error('Error fetching trainings:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const barChartData = _(trainings).groupBy('activity').map((group, name) => ({\n    name,\n    minutes: _.sumBy(group, 'duration')\n  })).value();\n  const pieChartData = _(trainings).map(training => {\n    const date = new Date(training.date);\n    return {\n      ...training,\n      day: date.toLocaleString('en-US', {\n        weekday: 'long'\n      })\n    };\n  }).groupBy('day').map((group, day) => ({\n    name: day,\n    value: group.length\n  })).value();\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884d8', '#8dd1e1', '#a4de6c'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Activity Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-around'\n      },\n      children: [/*#__PURE__*/_jsxDEV(BarChart, {\n        width: 600,\n        height: 300,\n        data: barChartData,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"minutes\",\n          fill: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n        width: 400,\n        height: 300,\n        children: [/*#__PURE__*/_jsxDEV(Pie, {\n          data: pieChartData,\n          cx: 200,\n          cy: 150,\n          labelLine: false,\n          label: _ref => {\n            let {\n              name,\n              percent\n            } = _ref;\n            return `${name}: ${(percent * 100).toFixed(0)}%`;\n          },\n          outerRadius: 100,\n          fill: \"#8884d8\",\n          dataKey: \"value\",\n          children: pieChartData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n            fill: COLORS[index % COLORS.length]\n          }, `cell-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Statistics, \"uabLU8KjmDYF8yoFx+QKK9rR174=\");\n_c = Statistics;\nexport default Statistics;\nvar _c;\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"names":["React","useState","useEffect","BarChart","CartesianGrid","XAxis","YAxis","Tooltip","Legend","Bar","PieChart","Pie","Cell","_","jsxDEV","_jsxDEV","Statistics","_s","GET_ALL_URL","trainings","setTrainings","fetchData","response","fetch","ok","Error","status","data","json","error","console","barChartData","groupBy","map","group","name","minutes","sumBy","value","pieChartData","training","date","Date","day","toLocaleString","weekday","length","COLORS","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","width","height","strokeDasharray","dataKey","fill","cx","cy","labelLine","label","_ref","percent","toFixed","outerRadius","entry","index","_c","$RefreshReg$"],"sources":["/Users/sakhiahmad/Desktop/Uni/Front-end/pt-app/ptapp/pt-app-deploy/src/components/Statistics.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BarChart, CartesianGrid, XAxis, YAxis, Tooltip, Legend, Bar, PieChart, Pie, Cell } from 'recharts';\nimport _ from 'lodash';\n\nconst Statistics = () => {\n  const GET_ALL_URL = 'https://traineeapp.azurewebsites.net/gettrainings';\n  const [trainings, setTrainings] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(GET_ALL_URL);\n        if (!response.ok) {\n          throw new Error(`Error fetching trainings: ${response.status}`);\n        }\n        const data = await response.json();\n        setTrainings(data);\n      } catch (error) {\n        console.error('Error fetching trainings:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const barChartData = _(trainings)\n    .groupBy('activity')\n    .map((group, name) => ({\n      name,\n      minutes: _.sumBy(group, 'duration'),\n    }))\n    .value();\n\n  const pieChartData = _(trainings)\n    .map(training => {\n      const date = new Date(training.date);\n      return { ...training, day: date.toLocaleString('en-US', { weekday: 'long' }) };\n    })\n    .groupBy('day')\n    .map((group, day) => ({\n      name: day,\n      value: group.length,\n    }))\n    .value();\n\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884d8', '#8dd1e1', '#a4de6c'];\n\n  return (\n    <div>\n      <h2>Activity Statistics</h2>\n      <div style={{ display: 'flex', justifyContent: 'space-around' }}>\n        <BarChart width={600} height={300} data={barChartData}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Bar dataKey=\"minutes\" fill=\"#8884d8\" />\n        </BarChart>\n        <PieChart width={400} height={300}>\n          <Pie\n            data={pieChartData}\n            cx={200}\n            cy={150}\n            labelLine={false}\n            label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(0)}%`}\n            outerRadius={100}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n          >\n            {pieChartData.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n            ))}\n          </Pie>\n          <Tooltip />\n          <Legend />\n        </PieChart>\n      </div>\n    </div>\n  );\n};\n\nexport default Statistics;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}